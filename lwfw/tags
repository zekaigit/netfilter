!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DENY_IF_ACTIVE	lwfw.h	73;"	d
DENY_IP_ACTIVE	lwfw.h	74;"	d
DENY_PORT_ACTIVE	lwfw.h	75;"	d
LWFW_ACTIVATE	lwfw.h	38;"	d
LWFW_CTRL_SET	lwfw.h	36;"	d
LWFW_DEACTIVATE	lwfw.h	39;"	d
LWFW_DENY_IF	lwfw.h	41;"	d
LWFW_DENY_IP	lwfw.h	42;"	d
LWFW_DENY_PORT	lwfw.h	43;"	d
LWFW_GET_STATS	lwfw.h	40;"	d
LWFW_GET_VERS	lwfw.h	37;"	d
LWFW_IF_DENY_ACTIVE	lwfw.h	46;"	d
LWFW_IP_DENY_ACTIVE	lwfw.h	47;"	d
LWFW_MAJOR	lwfw.h	65;"	d
LWFW_NAME	lwfw.h	25;"	d
LWFW_PORT_DENY_ACTIVE	lwfw.h	48;"	d
LWFW_TALKATIVE	lwfw.h	33;"	d
LWFW_VERS	lwfw.h	28;"	d
NULL_CHECK	lwfw.h	69;"	d
__LWFW_INCLUDE__	lwfw.h	21;"	d
active	lwfw.c	/^static int active = 0;  $/;"	v	file:
cdev_m	lwfw.c	/^struct cdev cdev_m;  $/;"	v	typeref:struct:cdev
check_ip_packet	lwfw.c	/^static int check_ip_packet(struct sk_buff *skb)  $/;"	f	file:	signature:(struct sk_buff *skb)
check_ip_packet	lwfw.c	/^static int check_ip_packet(struct sk_buff *skb);  $/;"	p	file:	signature:(struct sk_buff *skb)
check_tcp_packet	lwfw.c	/^static int check_tcp_packet(struct sk_buff *skb)  $/;"	f	file:	signature:(struct sk_buff *skb)
check_tcp_packet	lwfw.c	/^static int check_tcp_packet(struct sk_buff *skb);  $/;"	p	file:	signature:(struct sk_buff *skb)
cleanup_module	lwfw.c	/^MODULE_EXIT(cleanup_module);  $/;"	v
cleanup_module	lwfw.c	/^void cleanup_module()  $/;"	f
copy_stats	lwfw.c	/^static int copy_stats(struct lwfw_stats *statbuff)  $/;"	f	file:	signature:(struct lwfw_stats *statbuff)
copy_stats	lwfw.c	/^static int copy_stats(struct lwfw_stats *statbuff);  $/;"	p	file:	signature:(struct lwfw_stats *statbuff)
deny_if	lwfw.c	/^static char *deny_if = NULL;                 \/* Interface to deny *\/  $/;"	v	file:
deny_ip	lwfw.c	/^static unsigned int deny_ip = 0x00000000;    \/* IP address to deny *\/  $/;"	v	file:
deny_port	lwfw.c	/^static unsigned short deny_port = 0x0000;   \/* TCP port to deny *\/  $/;"	v	file:
if_dropped	lwfw.h	/^   unsigned int if_dropped;           \/* Packets dropped by interface rule *\/  $/;"	m	struct:lwfw_stats	access:public
inet_addr	lwfw.c	/^unsigned int inet_addr(char *str)     $/;"	f	signature:(char *str)
init_module	lwfw.c	/^MODULE_INIT(init_module);  $/;"	v
init_module	lwfw.c	/^int init_module()  $/;"	f
ip_dropped	lwfw.h	/^   unsigned int ip_dropped;           \/* Packets dropped by IP addr. rule *\/  $/;"	m	struct:lwfw_stats	access:public
long_options	test.c	/^struct option long_options[] = {  $/;"	v	typeref:struct:option
lwfw_ctrl_in_use	lwfw.c	/^static int lwfw_ctrl_in_use = 0;  $/;"	v	file:
lwfw_fops	lwfw.c	/^struct file_operations  lwfw_fops = {  $/;"	v	typeref:struct:file_operations
lwfw_hookfn	lwfw.c	/^unsigned int lwfw_hookfn(unsigned int hooknum,  $/;"	f	signature:(unsigned int hooknum, struct sk_buff *skb, const struct net_device *in, const struct net_device *out, int (*okfn)(struct sk_buff *))
lwfw_ioctl	lwfw.c	/^static int lwfw_ioctl( struct file *file, unsigned int cmd, unsigned long arg)  $/;"	f	file:	signature:( struct file *file, unsigned int cmd, unsigned long arg)
lwfw_ioctl	lwfw.c	/^static int lwfw_ioctl( struct file *file, unsigned int cmd, unsigned long arg);  $/;"	p	file:	signature:( struct file *file, unsigned int cmd, unsigned long arg)
lwfw_open	lwfw.c	/^static int lwfw_open(struct inode *inode, struct file *file)  $/;"	f	file:	signature:(struct inode *inode, struct file *file)
lwfw_open	lwfw.c	/^static int lwfw_open(struct inode *inode, struct file *file);  $/;"	p	file:	signature:(struct inode *inode, struct file *file)
lwfw_options	lwfw.c	/^static unsigned int lwfw_options = (LWFW_IF_DENY_ACTIVE  $/;"	v	file:
lwfw_release	lwfw.c	/^static int lwfw_release(struct inode *inode, struct file *file)  $/;"	f	file:	signature:(struct inode *inode, struct file *file)
lwfw_release	lwfw.c	/^static int lwfw_release(struct inode *inode, struct file *file);  $/;"	p	file:	signature:(struct inode *inode, struct file *file)
lwfw_statistics	lwfw.c	/^static struct lwfw_stats lwfw_statistics = {0, 0, 0, 0, 0};  $/;"	v	typeref:struct:lwfw_stats	file:
lwfw_stats	lwfw.h	/^struct lwfw_stats {  $/;"	s
lwfw_stats::if_dropped	lwfw.h	/^   unsigned int if_dropped;           \/* Packets dropped by interface rule *\/  $/;"	m	struct:lwfw_stats	access:public
lwfw_stats::ip_dropped	lwfw.h	/^   unsigned int ip_dropped;           \/* Packets dropped by IP addr. rule *\/  $/;"	m	struct:lwfw_stats	access:public
lwfw_stats::tcp_dropped	lwfw.h	/^   unsigned int tcp_dropped;           \/* Packets dropped by TCP port rule *\/  $/;"	m	struct:lwfw_stats	access:public
lwfw_stats::total_dropped	lwfw.h	/^   unsigned long total_dropped;   \/* Total packets dropped *\/  $/;"	m	struct:lwfw_stats	access:public
lwfw_stats::total_seen	lwfw.h	/^   unsigned long total_seen;      \/* Total packets seen by filter *\/  $/;"	m	struct:lwfw_stats	access:public
main	test.c	/^int main(int argc, char *argv[])  $/;"	f	signature:(int argc, char *argv[])
major	lwfw.c	/^static int major = 0;               \/* Control device major number *\/  $/;"	v	file:
nfkiller	lwfw.c	/^struct nf_hook_ops nfkiller;  $/;"	v	typeref:struct:nf_hook_ops
set_if_rule	lwfw.c	/^static int set_if_rule(char *name)  $/;"	f	file:	signature:(char *name)
set_if_rule	lwfw.c	/^static int set_if_rule(char *name);  $/;"	p	file:	signature:(char *name)
set_ip_rule	lwfw.c	/^static int set_ip_rule(char * ip)  $/;"	f	file:	signature:(char * ip)
set_ip_rule	lwfw.c	/^static int set_ip_rule(char * ip);  $/;"	p	file:	signature:(char * ip)
set_port_rule	lwfw.c	/^static int set_port_rule(char * port)  $/;"	f	file:	signature:(char * port)
set_port_rule	lwfw.c	/^static int set_port_rule(char * port);  $/;"	p	file:	signature:(char * port)
short_options	test.c	/^char* const short_options = "adgf:p:t:";   $/;"	v
tcp_dropped	lwfw.h	/^   unsigned int tcp_dropped;           \/* Packets dropped by TCP port rule *\/  $/;"	m	struct:lwfw_stats	access:public
total_dropped	lwfw.h	/^   unsigned long total_dropped;   \/* Total packets dropped *\/  $/;"	m	struct:lwfw_stats	access:public
total_seen	lwfw.h	/^   unsigned long total_seen;      \/* Total packets seen by filter *\/  $/;"	m	struct:lwfw_stats	access:public
